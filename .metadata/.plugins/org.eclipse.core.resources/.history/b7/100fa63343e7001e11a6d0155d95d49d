<!DOCTYPE html>  <!-- !+ enter치면 됨 -->  <!-- 주석 단축키 : ctrl + / -->
<html lang="en">
    
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Servlet 프로젝트</title>
</head>

<body>
    <h1>최다연</h1>
    <h2>index 또는 default라는 이름의 html,jsp,htm 파일은 메인페이지 역할을 한다!</h2>
    <h3>web.xml 파일을 확인해라~</h3>
    <!-- 프로젝트 폴더에서 우클릭  후  run as -> run on server 해주면 된다.-->

    <hr>

    <h1>서버 제출 테스트1</h1>
    <pre>
        이름과 나이를 입력받아서 서버(Java 코드)로 제출

        *준비물*
        1)  form 태그 : 내부에 작성되어 있는 input의 값을 지정된 경로로 제출
        - action : 제출할 경로를 작성
        - method : 제출 방법(GET혹은 POST로 메서드를 지정하기/ 만약에 아무것도 지정하지 않는다면 기본값은 GET이다!)
                   제출 == 클라이언트가 서버로 요청

        2) input 태그 : 값을 입력하는 양식을 제공
        - name(*중요*) : 서버로 값을 제출 시 key 역할을 함.
        - 입력된 값 또는 value : 서버로 제출 시 value 역할을 함.

        <!-- <input name = "inputName" value="홍길동"/> -->

        ?inputName = 홍길동

        **GET : GET을 통한 요청은 URL 주소 끝에 파라미터로 포함되어 전송되며,
        이 부분을 query String 이라고 부른다.
        방식은 URL 끝에 "?" 를 붙이고 그 다음 변수명1=값1&변수명2=값2...
        ex) www.example.com/?name=value1&name2=value2...
        -> 서버에서는 name1과 name2라는 파라미터 명으로 각각 value1과 value2 파라미터 값을 전달받을 수 있다.

        [장점]
        -단순함
        -캐싱가능(caching, 저장)
                 -> 주소 저장 == 북마크, 즐겨찾기, 주소 공유...
        [단점] 
        -글자수 제한이 있다.
        -보안에 취약하다(비밀번호가 주소에 보임...)

    </pre>

    <form action="/example1" method="get">
        이름 : <input name = "inputName">
        <br>
        나이 : <input type="number" name="inputAge">
        <br><br>
        <button type="submit">서버로 제출하기(요청하기)</button>   <!-- 버튼의 기본값은 submit -->
    </form>

	<hr>
	
    <h1>POST방식 요청 및 응답</h1>
	<pre>
        GET 방식과는 다르게
        전달되는 값을 주소가 아닌
        HTTP BODY에 담아서 전달하는 방식

        [장점]
        -길이 제한X
        -데이터를 숨겨서 전달할수 있다(보안성 향상)

        [단점]
        -캐싱 불가능(북마크, 즐겨찻기같은거 XX / 북마크하면 원하는 페이지를 볼 수 없음)
        -서벙에서 추가적인 문자 인코딩 처리 필요(tomcat 10 부터 해당문제 해결되었음)
    </pre>
	
	
	<h3>회원가입</h3>
	
	<form>
		아이디 : <input type="text" name ="inputId" required> <br>
		비밀번호 :  <input type="password" name ="inputPw" required> <br>
		비밀번호 확인 :  <input type="password"  required> <br>
		이름 : <input name ="inpurName" required> <br>
	</form>






</body>
</html>


